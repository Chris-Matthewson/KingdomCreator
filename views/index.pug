extends layout.pug

//-   .hovering-randomize-button(data-bind="showFloating: '.condensed_randomize-button'")
//-     a.button(data-bind="click: randomize, text: randomizeButtonText")
//-   .main
//-     #cards(data-bind="style:{visibility: hasLoaded() ? 'visible':'hidden'}, \
//-         foreach: supplyCards, css: {'enlarge-cards': isCondensed() && isEnlarged()}",
//-         style="visibility:hidden;")
//-       .card-wrap(data-bind="click: toggleSelected, css: {'selected': isSelected}")
//-         .flipper(data-bind="scaleOffWidthOfImage:{selector: '.card-back-image', \
//-             trigger: $parent.isEnlarged() + Date.now() }, \
//-             css: { 'show-front': isCardImageLoaded() && !isLoading() }" )
//-           .card-back
//-             img.card-back-image(src="/img/cards/backside_blue.jpg")
//-           .card-front
//-             img(data-bind="attr:{src:imageUrl}")
//-             .set-name-wrap
//-               .set-name(data-bind="text: setName, visible: !isLoading(), css:setClass")
//-         .highlight

//-     .addons-header(data-bind="visible: showAddons, \
//-         text: addonsHeader")
//-     .addons(data-bind="visible: showAddons, \
//-         foreach: addons, css: {'enlarge-cards': isCondensed() && isEnlarged()}")
//-       .card-wrap(data-bind="click: toggleSelected, css: {'selected': isSelected}")
//-         .flipper(data-bind="scaleOffWidthOfImage:{selector: '.card-back-image', \
//-             trigger: $parent.isEnlarged() + $parent.showAddons() + Date.now() }, \
//-             css: { 'show-front': isCardImageLoaded() && !isLoading() }" )
//-           .card-back
//-             img.card-back-image(src="/img/cards/backside_blue_horizontal.jpg")
//-           .card-front
//-             img(data-bind="attr:{src:imageUrl}")
//-             .set-name-wrap
//-               .set-name(data-bind="text: setName, visible: !isLoading(), css:setClass")
//-         .highlight

//-     .modifiers-header(data-bind="fadeIn: metadata.show") Additional
//-     .modifiers(data-bind="fadeIn: metadata.show, with: metadata, \
//-         css: {'enlarge-cards': isCondensed() && isEnlarged()}")
//-       .clear-left
//-       .modifier-container.card-wrap(data-bind="fadeIn: useColonies")
//-         .modifier-margin
//-           img.modifier-card(src="/img/cards/prosperity_coloniesplatinums.png")
//-           .modifier-name-container
//-             .modifier-name Colonies & Platinums
//-       .modifier-container.card-wrap(data-bind="fadeIn: useShelters")
//-         .modifier-margin
//-           img.modifier-card(src="/img/cards/darkages_shelters.png")
//-           .modifier-name-container
//-             .modifier-name Shelters
//-     .clear   

//- block afterFooter
//-   a.change-size-button(data-bind="visible: isCondensed")
//-     .change-size-button-icon(data-bind="click: toggleEnlarged, css:{ 'enlarged': isEnlarged}")

//-   .dialog-hidden-content
//-     .dialog-content(data-bind="with: dialog")
//-       .dialog-desc Use this dialog to customize the replacement card
//-       .sets-wrap
//-         h1(data-bind="click: toggleSetsSection")
//-           span.heading Sets
//-           span.toggleButton(data-bind="text: isSetsSectionOpen() ?'Hide':'Show'")
//-         .sets(data-bind="foreach: sets, slideVisible: isSetsSectionOpen")
//-           .set.checkbox-wrap.columns
//-             label.checkbox
//-               input(type="radio", name="sets",
//-                   data-bind="checked: $parent.selectedSetId, attr: {value: id}")
//-               span(data-bind="text: name")
//-         .clear
//-         h1(data-bind="click: toggleSupplyCardTypesSection")
//-           span.heading Types
//-           span.toggleButton(
//-               data-bind="text: isSupplyCardTypesSectionOpen() ?'Hide':'Show'")
//-         .types(
//-             data-bind="foreach: supplyCardTypes, slideVisible: isSupplyCardTypesSectionOpen")
//-           .type.checkbox-wrap.columns
//-             label.checkbox
//-               input(type="radio", name="types",
//-                   data-bind="checked: $parent.selectedType, attr: {value: id}")
//-               span(data-bind="text: name")
//-         .clear
//-         h1(data-bind="click: toggleCostsSection")
//-           span.heading Cost
//-           span.toggleButton(data-bind="text: isCostsSectionOpen() ?'Hide':'Show'")
//-         .costs(data-bind="foreach: costs, slideVisible: isCostsSectionOpen")
//-           .cost.checkbox-wrap.columns.four
//-             label.checkbox
//-               input(type="checkbox", data-bind="checked: isActive")
//-               span(data-bind="text: name")
//-         .clear

//-       .dialog-buttons
//-         a.button(data-bind="click: fetchNewCards") Randomize
//-         a.button.gray(data-bind="click: close") Close
//-         .clear
