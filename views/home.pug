extends layout.pug

block head
   script.
      window.DominionSets = !{JSON.stringify(sets)};

block content
   header
      h1.title Kingdom Creator
      h2.tagline Dominion randomizer for desktop and mobile
      
   .content
      .sidebar
         .filters
            h1 Sets
            .sets(data-bind="foreach: sets")
               .set
                  label.checkbox
                     input(type="checkbox", data-bind="checked: active")
                     span(data-bind="text: name")
            .clear
            h1 Options
            .option
               label.checkbox
                  input(type="checkbox", data-bind="checked: requireActionProvider")
                  span Require +2 Action
            .option
               label.checkbox
                  input(type="checkbox", data-bind="checked: requireBuyProvider")
                  span Require Buy
            .option
               label.checkbox
                  input(type="checkbox", data-bind="checked: allowAttackCards")
                  span Allow Attacks
               .suboption
                  label.checkbox(data-bind="css:{'disable': !allowAttackCards()}")
                     input(type="checkbox", data-bind="checked: requireReaction, enable: allowAttackCards")
                     span Require Reaction
            h1 Display
            .option
               label.checkbox
                  input(type="checkbox", data-bind="checked: showSet")
                  span Show Set on Cards
            .option
               label.checkbox
                  input(type="checkbox", data-bind="checked: sortAlphabetically")
                  span Sort Alphabetically
            a.sidebarRandomizeButton.button(
                  data-bind="click: randomize, text: randomizeButtonText")
         .meta(data-bind="with: metadata")
            h1 Recommendations
            .recommendation
               | Use Colonies/Platinums:
               | <span data-bind="text: useColonies() ? 'Yes' : 'No'"></span>
            .recommendation
               | Use Shelters:
               | <span data-bind="text: useShelters() ? 'Yes' : 'No'"></span>
      .hovering-randomize-button(data-bind="showFloating: '.sidebarRandomizeButton'")
         a.button(data-bind="click: randomize, text: randomizeButtonText")
      .main
         #cards(data-bind="style:{visibility: hasLoaded() ? 'visible':'hidden'}, \
               foreach: cards, css: {'enlarge-cards': isCondensed() && isEnlarged()}",
               style="visibility:hidden;")
            .card-wrap(data-bind="click: toggleSelected, css: {'selected': selected}")
               .flipper(data-bind="scaleOffWidthOfImage:{selector: '.card-back-image', \
                     trigger: $parent.isEnlarged() + Date.now() }, \
                     css: { 'show-front': cardImageLoaded() && !isLoading() }" )
                  .card-back
                     img.card-back-image(src="/img/cards/backside_blue.jpg")
                  .card-front
                     img(data-bind="attr:{src:imageUrl}")
                     .set-name-wrap
                        .set-name(data-bind="text: set, visible: $root.showSet() && !isLoading(), css:setClass")
               .highlight

         .eventsAndLandmarks-header(data-bind="visible: showEventsAndLandmarks, \
               text: eventsAndLandmarksHeader")
         .eventsAndLandmarks(data-bind="visible: showEventsAndLandmarks, \
               foreach: eventsAndLandmarks, css: {'enlarge-cards': isCondensed() && isEnlarged()}")
            .card-wrap(data-bind="click: toggleSelected, css: {'selected': selected}")
               .flipper(data-bind="scaleOffWidthOfImage:{selector: '.card-back-image', \
                     trigger: $parent.isEnlarged() + $parent.showEventsAndLandmarks() + Date.now() }, \
                     css: { 'show-front': cardImageLoaded() && !isLoading() }" )
                  .card-back
                     img.card-back-image(src="/img/cards/backside_blue_horizontal.jpg")
                  .card-front
                     img(data-bind="attr:{src:imageUrl}")
                     .set-name-wrap
                        .set-name(data-bind="text: set, visible: $root.showSet() && !isLoading(), css:setClass")
               .highlight
         .clear   

   footer
      | Dominion is by Donald X. Vaccarino and published by Rio Grande Games.
      | This site has no affiliation with either party.
      | Card images are provided by <a href="http://www.diehrstraits.com/">Mark Diehr</a>.
      | <br>
      | Source on <a href="https://github.com/blakevanlan/KingdomCreator">Github</a>.
      | Feature requests and complains go <a href="https://github.com/blakevanlan/KingdomCreator/issues">here</a>!

   a.change-size-button(data-bind="visible: isCondensed")
      .change-size-button-icon(data-bind="click: toggleEnlarged, css:{ 'enlarged': isEnlarged}")

   .dialog-hidden-content
      .dialog-content(data-bind="with: dialog")
         .dialog-desc Use this dialog to customize the replacement card(s)
         .sets-wrap
            h1(data-bind="click: toggleSetsSection")
               span.heading Sets
               span.toggleButton(data-bind="text: openSetsSection() ?'Hide':'Show'")
            .sets(data-bind="foreach: sets, slideVisible: openSetsSection")
               .set.checkbox-wrap.columns
                  label.checkbox
                     input(type="checkbox", data-bind="checked: active")
                     span(data-bind="text: name")
            .clear
            h1(data-bind="click: toggleTypesSection")
               span.heading Types
               span.toggleButton(data-bind="text: openTypesSection() ?'Hide':'Show'")
            .types(data-bind="foreach: types, slideVisible: openTypesSection")
               .type.checkbox-wrap.columns
                  label.checkbox
                     input(type="checkbox", data-bind="checked: active")
                     span(data-bind="text: name")
            .clear
            h1(data-bind="click: toggleCostsSection")
               span.heading Cost
               span.toggleButton(data-bind="text: openCostsSection() ?'Hide':'Show'")
            .costs(data-bind="foreach: costs, slideVisible: openCostsSection")
               .cost.checkbox-wrap.columns.four
                  label.checkbox
                     input(type="checkbox", data-bind="checked: active")
                     span(data-bind="text: name")
            .clear

         .dialog-buttons
            a.button(data-bind="click: fetchNewCards") Randomize
            a.button.gray(data-bind="click: close") Close
            .clear
